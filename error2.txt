============================= test session starts ==============================
platform linux -- Python 3.10.0, pytest-8.0.0, pluggy-1.4.0
rootdir: /lustre/isaac/scratch/upratius/projects/pyroVED
plugins: anyio-4.2.0
collected 299 items

tests/test_conv.py ..................................................... [ 17%]
........................                                                 [ 25%]
tests/test_models.py ...........FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 42%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF.....FFFF........... [ 66%]
.................................................................        [ 88%]
tests/test_trainers.py ..................................                [100%]

=================================== FAILURES ===================================
________________________ test_base_vae_split_latent_2d _________________________

    def test_base_vae_split_latent_2d():
        z = torch.randn(5, 6)
        m = models.base.baseVAE((8, 8), ['r', 't', 's'])
>       z_split = m._split_latent(z)

tests/test_models.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = baseVAE()
z = tensor([[ 1.3814,  0.0929,  0.0437],
        [-0.2938, -2.2833, -0.2397],
        [ 0.7057, -0.2901,  0.8194],
        [ 1.5299,  0.8326, -2.1338],
        [ 1.0750,  0.0986,  1.3099]])

    def _split_latent(self, z: torch.Tensor) -> Tuple[torch.Tensor]:
        """
        Split latent vector into parts associated with
        coordinate transformations and image content
        """
        # For 1D, there is only a translation
        if self.ndim == 1:
            dx = z[:, 0:1]
            z = z[:, 1:]
            return None, dx, None, z
        phi = tt(0).to(self.device)
        dx = tt(0).to(self.device)
        sc = tt(1).to(self.device)
        if 'r' in self.invariances:
            phi = z[:, 0]
            z = z[:, 1:]
        if 't' in self.invariances:
            dx = z[:, :2]
            z = z[:, 2:]
        if 's' in self.invariances:
>           sc = sc + self.sc_prior * z[:, 0]
E           RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!

pyroved/models/base.py:117: RuntimeError
________________________ test_trvae_sites_dims_2d[None] ________________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c420333d0>
args = (tensor([[[-0.0879,  0.0927, -0.0393, -1.7137, -0.8276, -0.0043, -1.8220,
          -0.3404],
         [-0.5203,  1.32...4,
          -0.2071],
         [-1.3475,  0.5426,  0.1716, -0.9599, -0.4074, -1.1241, -1.0431,
           0.8682]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c5e2e4700>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-0.0879,  0.0927, -0.0393, -1.7137, -0.8276, -0.0043, -1.8220, -0.3404,
         -0.5203,  1.3288, -0.0531, -... -0.5667,  0.8584, -1.3034, -0.2071,
         -1.3475,  0.5426,  0.1716, -0.9599, -0.4074, -1.1241, -1.0431,  0.8682]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_trvae_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-0.0879,  0.0927, -0.0393, -1.7137, -0.8276, -0.0043, -1.8220, -0.3404,
         -0.5203,  1.3288, -0.0531, -... -0.5667,  0.8584, -1.3034, -0.2071,
         -1.3475,  0.5426,  0.1716, -0.9599, -0.4074, -1.1241, -1.0431,  0.8682]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
____________________ test_trvae_sites_dims_2d[invariances1] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25dc3400>
args = (tensor([[[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370,
          -1.0575],
         [-1.2395,  1.04...8,
           1.0180],
         [-0.0237,  0.2230, -0.7297,  0.9130, -0.6408,  0.9839, -0.3773,
          -0.2961]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25d31c40>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370, -1.0575,
         -1.2395,  1.0436, -0.7263, -... -0.3903, -0.5238,  1.9938,  1.0180,
         -0.0237,  0.2230, -0.7297,  0.9130, -0.6408,  0.9839, -0.3773, -0.2961]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_trvae_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370, -1.0575,
         -1.2395,  1.0436, -0.7263, -... -0.3903, -0.5238,  1.9938,  1.0180,
         -0.0237,  0.2230, -0.7297,  0.9130, -0.6408,  0.9839, -0.3773, -0.2961]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
____________________ test_trvae_sites_dims_2d[invariances2] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25b5fdf0>
args = (tensor([[[ 0.9471,  0.2196,  0.7258, -0.4356, -0.2420, -1.4561, -0.0214,
          -1.5644],
         [ 0.6791, -1.08...9,
           0.2899],
         [ 0.8132, -1.0258,  1.2501,  0.3263,  0.4809,  0.7221,  1.0336,
          -1.1722]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25e49380>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.9471,  0.2196,  0.7258, -0.4356, -0.2420, -1.4561, -0.0214, -1.5644,
          0.6791, -1.0871,  0.5648,  ... -0.6031,  0.2795, -0.9159,  0.2899,
          0.8132, -1.0258,  1.2501,  0.3263,  0.4809,  0.7221,  1.0336, -1.1722]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_trvae_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.9471,  0.2196,  0.7258, -0.4356, -0.2420, -1.4561, -0.0214, -1.5644,
          0.6791, -1.0871,  0.5648,  ... -0.6031,  0.2795, -0.9159,  0.2899,
          0.8132, -1.0258,  1.2501,  0.3263,  0.4809,  0.7221,  1.0336, -1.1722]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
____________________ test_trvae_sites_dims_2d[invariances3] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25daf8b0>
args = (tensor([[[ 0.9471,  0.2196,  0.7258, -0.4356, -0.2420, -1.4561, -0.0214,
          -1.5644],
         [ 0.6791, -1.08...9,
           0.2899],
         [ 0.8132, -1.0258,  1.2501,  0.3263,  0.4809,  0.7221,  1.0336,
          -1.1722]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25bee340>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.9471,  0.2196,  0.7258, -0.4356, -0.2420, -1.4561, -0.0214, -1.5644,
          0.6791, -1.0871,  0.5648,  ... -0.6031,  0.2795, -0.9159,  0.2899,
          0.8132, -1.0258,  1.2501,  0.3263,  0.4809,  0.7221,  1.0336, -1.1722]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_trvae_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.9471,  0.2196,  0.7258, -0.4356, -0.2420, -1.4561, -0.0214, -1.5644,
          0.6791, -1.0871,  0.5648,  ... -0.6031,  0.2795, -0.9159,  0.2899,
          0.8132, -1.0258,  1.2501,  0.3263,  0.4809,  0.7221,  1.0336, -1.1722]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
____________________ test_trvae_sites_dims_2d[invariances4] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c42040970>
args = (tensor([[[ 1.8245,  0.5220,  1.5653,  0.4131,  1.8105, -2.5836, -1.3200,
          -0.2597],
         [ 0.5209, -0.07...6,
           0.3008],
         [ 2.0333,  0.7899, -0.3394, -1.5091,  1.0813, -0.4319,  1.0007,
           0.6796]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a69700>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.8245,  0.5220,  1.5653,  0.4131,  1.8105, -2.5836, -1.3200, -0.2597,
          0.5209, -0.0747, -0.7278,  ... -0.2639,  0.7825, -0.6416,  0.3008,
          2.0333,  0.7899, -0.3394, -1.5091,  1.0813, -0.4319,  1.0007,  0.6796]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_trvae_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.8245,  0.5220,  1.5653,  0.4131,  1.8105, -2.5836, -1.3200, -0.2597,
          0.5209, -0.0747, -0.7278,  ... -0.2639,  0.7825, -0.6416,  0.3008,
          2.0333,  0.7899, -0.3394, -1.5091,  1.0813, -0.4319,  1.0007,  0.6796]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
________________________ test_trvae_sites_dims_1d[None] ________________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25b62260>
args = (tensor([[ 1.8245,  0.5220,  1.5653,  0.4131,  1.8105, -2.5836, -1.3200, -0.2597],
        [ 1.1128, -0.4832, -0.4025,....6386,  0.2897,  0.8918,  0.6106],
        [ 0.3647, -0.3679, -0.8656, -0.9080,  1.0111, -0.4331, -0.3798, -0.4933]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c400f3b80>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128   ...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=8, out_features=128, bias=True)
input = tensor([[ 1.8245,  0.5220,  1.5653,  0.4131,  1.8105, -2.5836, -1.3200, -0.2597],
        [ 1.1128, -0.4832, -0.4025, ...-0.6386,  0.2897,  0.8918,  0.6106],
        [ 0.3647, -0.3679, -0.8656, -0.9080,  1.0111, -0.4331, -0.3798, -0.4933]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['t']])
    def test_trvae_sites_dims_1d(invariances):
        data_dim = (3, 8)
        x = torch.randn(*data_dim)
        coord = 0 if invariances is None else len(invariances)
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=8, out_features=128, bias=True)
input = tensor([[ 1.8245,  0.5220,  1.5653,  0.4131,  1.8105, -2.5836, -1.3200, -0.2597],
        [ 1.1128, -0.4832, -0.4025, ...-0.6386,  0.2897,  0.8918,  0.6106],
        [ 0.3647, -0.3679, -0.8656, -0.9080,  1.0111, -0.4331, -0.3798, -0.4933]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128   8
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
____________________ test_trvae_sites_dims_1d[invariances1] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c5e32b700>
args = (tensor([[ 0.3116, -2.6398,  0.7000,  0.5136, -0.1959, -1.3238,  0.4053, -1.5296],
        [ 2.0455,  0.2377,  1.4413,....1437, -1.2366, -0.4258,  0.0400],
        [-0.1302, -0.8331,  0.9211, -0.0340,  0.6078,  1.1064, -0.7579, -1.9314]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25dfef40>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128   ...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=8, out_features=128, bias=True)
input = tensor([[ 0.3116, -2.6398,  0.7000,  0.5136, -0.1959, -1.3238,  0.4053, -1.5296],
        [ 2.0455,  0.2377,  1.4413, ...-1.1437, -1.2366, -0.4258,  0.0400],
        [-0.1302, -0.8331,  0.9211, -0.0340,  0.6078,  1.1064, -0.7579, -1.9314]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['t']

    @pytest.mark.parametrize("invariances", [None, ['t']])
    def test_trvae_sites_dims_1d(invariances):
        data_dim = (3, 8)
        x = torch.randn(*data_dim)
        coord = 0 if invariances is None else len(invariances)
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=8, out_features=128, bias=True)
input = tensor([[ 0.3116, -2.6398,  0.7000,  0.5136, -0.1959, -1.3238,  0.4053, -1.5296],
        [ 2.0455,  0.2377,  1.4413, ...-1.1437, -1.2366, -0.4258,  0.0400],
        [-0.1302, -0.8331,  0.9211, -0.0340,  0.6078,  1.1064, -0.7579, -1.9314]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128   8
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_____________________ test_trvae_sites_fn[data_dim0-None] ______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d5ffd0>
args = (tensor([[[ 2.5991e+00,  6.4401e-01, -1.5366e+00, -5.8792e-01, -1.1062e+00,
          -9.4769e-02, -1.4508e+00,  6.149...[ 3.3057e-01, -8.6919e-01,  7.8020e-01,  1.9826e-01, -1.2716e+00,
           3.2258e-01,  9.2067e-02,  2.4717e+00]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a59580>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 2.5991e+00,  6.4401e-01, -1.5366e+00, -5.8792e-01, -1.1062e+00,
         -9.4769e-02, -1.4508e+00,  6.1493e-...-01,  3.3057e-01, -8.6919e-01,  7.8020e-01,  1.9826e-01,
         -1.2716e+00,  3.2258e-01,  9.2067e-02,  2.4717e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

data_dim = (3, 8, 8), invariances = None

    @pytest.mark.parametrize("invariances", [None, ['t']])
    @pytest.mark.parametrize("data_dim", [(3, 8, 8), (3, 8)])
    def test_trvae_sites_fn(data_dim, invariances):
        x = torch.randn(*data_dim)
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 2.5991e+00,  6.4401e-01, -1.5366e+00, -5.8792e-01, -1.1062e+00,
         -9.4769e-02, -1.4508e+00,  6.1493e-...-01,  3.3057e-01, -8.6919e-01,  7.8020e-01,  1.9826e-01,
         -1.2716e+00,  3.2258e-01,  9.2067e-02,  2.4717e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_trvae_sites_fn[data_dim0-invariances1] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25bcb430>
args = (tensor([[[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370,
          -1.0575],
         [-1.2395,  1.04...8,
           1.0180],
         [-0.0237,  0.2230, -0.7297,  0.9130, -0.6408,  0.9839, -0.3773,
          -0.2961]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c40132740>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370, -1.0575,
         -1.2395,  1.0436, -0.7263, -... -0.3903, -0.5238,  1.9938,  1.0180,
         -0.0237,  0.2230, -0.7297,  0.9130, -0.6408,  0.9839, -0.3773, -0.2961]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

data_dim = (3, 8, 8), invariances = ['t']

    @pytest.mark.parametrize("invariances", [None, ['t']])
    @pytest.mark.parametrize("data_dim", [(3, 8, 8), (3, 8)])
    def test_trvae_sites_fn(data_dim, invariances):
        x = torch.randn(*data_dim)
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370, -1.0575,
         -1.2395,  1.0436, -0.7263, -... -0.3903, -0.5238,  1.9938,  1.0180,
         -0.0237,  0.2230, -0.7297,  0.9130, -0.6408,  0.9839, -0.3773, -0.2961]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   4 128
E                encoder_z$$$fc11.bias       4
E              encoder_z$$$fc12.weight   4 128
E                encoder_z$$$fc12.bias       4
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_____________________ test_trvae_sites_fn[data_dim1-None] ______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25b61570>
args = (tensor([[ 0.4587, -0.4631,  1.4517, -0.6793, -1.7970, -0.7847, -0.8532,  0.1623],
        [-0.7296, -0.3313,  0.8704,....5330, -1.9717, -2.7760, -2.1548],
        [-0.7203, -1.5811,  0.6539,  0.0084, -0.5428,  0.8797,  0.4798, -0.6568]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25dd1fc0>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128   ...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=8, out_features=128, bias=True)
input = tensor([[ 0.4587, -0.4631,  1.4517, -0.6793, -1.7970, -0.7847, -0.8532,  0.1623],
        [-0.7296, -0.3313,  0.8704, ... 0.5330, -1.9717, -2.7760, -2.1548],
        [-0.7203, -1.5811,  0.6539,  0.0084, -0.5428,  0.8797,  0.4798, -0.6568]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

data_dim = (3, 8), invariances = None

    @pytest.mark.parametrize("invariances", [None, ['t']])
    @pytest.mark.parametrize("data_dim", [(3, 8, 8), (3, 8)])
    def test_trvae_sites_fn(data_dim, invariances):
        x = torch.randn(*data_dim)
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=8, out_features=128, bias=True)
input = tensor([[ 0.4587, -0.4631,  1.4517, -0.6793, -1.7970, -0.7847, -0.8532,  0.1623],
        [-0.7296, -0.3313,  0.8704, ... 0.5330, -1.9717, -2.7760, -2.1548],
        [-0.7203, -1.5811,  0.6539,  0.0084, -0.5428,  0.8797,  0.4798, -0.6568]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128   8
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_trvae_sites_fn[data_dim1-invariances1] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25ddc580>
args = (tensor([[ 0.3116, -2.6398,  0.7000,  0.5136, -0.1959, -1.3238,  0.4053, -1.5296],
        [ 2.0455,  0.2377,  1.4413,....1437, -1.2366, -0.4258,  0.0400],
        [-0.1302, -0.8331,  0.9211, -0.0340,  0.6078,  1.1064, -0.7579, -1.9314]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25cebd40>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128   ...                 Sample Sites:        \n                     data dist       |\n                         value   3   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   3   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=8, out_features=128, bias=True)
input = tensor([[ 0.3116, -2.6398,  0.7000,  0.5136, -0.1959, -1.3238,  0.4053, -1.5296],
        [ 2.0455,  0.2377,  1.4413, ...-1.1437, -1.2366, -0.4258,  0.0400],
        [-0.1302, -0.8331,  0.9211, -0.0340,  0.6078,  1.1064, -0.7579, -1.9314]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

data_dim = (3, 8), invariances = ['t']

    @pytest.mark.parametrize("invariances", [None, ['t']])
    @pytest.mark.parametrize("data_dim", [(3, 8, 8), (3, 8)])
    def test_trvae_sites_fn(data_dim, invariances):
        x = torch.randn(*data_dim)
        model = models.iVAE(data_dim[1:], invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=8, out_features=128, bias=True)
input = tensor([[ 0.3116, -2.6398,  0.7000,  0.5136, -0.1959, -1.3238,  0.4053, -1.5296],
        [ 2.0455,  0.2377,  1.4413, ...-1.1437, -1.2366, -0.4258,  0.0400],
        [-0.1302, -0.8331,  0.9211, -0.0340,  0.6078,  1.1064, -0.7579, -1.9314]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128   8
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E                        Sample Sites:        
E                            data dist       |
E                                value   3   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ved_sites_dims[input_dim0-output_dim0] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25b62a40>
args = (tensor([[[ 2.5991,  0.6440, -1.5366, -0.5879, -1.1062, -0.0948, -1.4508,
           0.6149]],

        [[ 0.1014, -0....-3.9432e-01,  1.1145e+00,  1.9723e+00, -7.6220e-01, -1.7119e+00,
           -1.8451e-01, -4.0727e-01,  2.5421e-02]]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c25aa6540>
shapes = '                                 Trace Shapes:            \n                                  Param Sites:           ...                                     data dist           |\n                                         value       2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                    data dist           |\n                                         value       2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:310: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))
input = tensor([[[ 2.5991,  0.6440, -1.5366, -0.5879, -1.1062, -0.0948, -1.4508,
           0.6149]],

        [[ 0.1014, -0.1832, -0.1018, -0.7043, -1.6632,  0.2632,  1.5267,
          -0.5640]]])
weight = Parameter containing:
tensor([[[ 0.2975, -0.2548, -0.1119]],

        [[ 0.2710, -0.5435,  0.3462]],

        [[-0.118...,

        [[ 0.1856, -0.4329,  0.1160]],

        [[ 0.1387, -0.3866, -0.2739]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([ 0.1969,  0.1034, -0.2456, -0.1748,  0.5288, -0.1068,  0.3255,  0.2500,
        -0.3732,...   -0.3492,  0.0725,  0.5754, -0.3647,  0.3077, -0.3196, -0.5428, -0.1227],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv1d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _single(0), self.dilation, self.groups)
>       return F.conv1d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:306: RuntimeError

The above exception was the direct cause of the following exception:

input_dim = (8,), output_dim = (8, 8)

    @pytest.mark.parametrize("input_dim, output_dim",
                             [((8,), (8, 8)), ((8, 8), (8,)),
                              ((8,), (8,)), ((8, 8), (8, 8))])
    def test_ved_sites_dims(input_dim, output_dim):
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim)
>       guide_trace, model_trace = get_traces(model, x, y)

tests/test_models.py:152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:310: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))
input = tensor([[[ 2.5991,  0.6440, -1.5366, -0.5879, -1.1062, -0.0948, -1.4508,
           0.6149]],

        [[ 0.1014, -0.1832, -0.1018, -0.7043, -1.6632,  0.2632,  1.5267,
          -0.5640]]])
weight = Parameter containing:
tensor([[[ 0.2975, -0.2548, -0.1119]],

        [[ 0.2710, -0.5435,  0.3462]],

        [[-0.118...,

        [[ 0.1856, -0.4329,  0.1160]],

        [[ 0.1387, -0.3866, -0.2739]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([ 0.1969,  0.1034, -0.2456, -0.1748,  0.5288, -0.1068,  0.3255,  0.2500,
        -0.3732,...   -0.3492,  0.0725,  0.5754, -0.3647,  0.3077, -0.3196, -0.5428, -0.1227],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv1d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _single(0), self.dilation, self.groups)
>       return F.conv1d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:            
E                                         Param Sites:            
E        encoder_z$$$feature_extractor.layers.0.weight  32   1   3
E          encoder_z$$$feature_extractor.layers.0.bias          32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32   3
E          encoder_z$$$feature_extractor.layers.3.bias          64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64   3
E          encoder_z$$$feature_extractor.layers.5.bias          64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64   3
E          encoder_z$$$feature_extractor.layers.8.bias         128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128   3
E         encoder_z$$$feature_extractor.layers.10.bias         128
E         encoder_z$$$features2latent.fc_latent.weight       4 256
E           encoder_z$$$features2latent.fc_latent.bias           4
E                                        Sample Sites:            
E                                            data dist           |
E                                                value       2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:306: RuntimeError
_________________ test_ved_sites_dims[input_dim1-output_dim1] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25e3f430>
args = (tensor([[[[ 0.9886, -1.1196,  0.8352, -1.2174,  1.8712, -0.4530,  0.5685,
            1.0910],
          [-0.5117,  0...,
           1.3426]],

        [[ 0.9121,  0.4938, -2.1002, -1.6765, -0.0365, -0.6057, -1.0779,
           0.3026]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c401bb000>
shapes = '                                 Trace Shapes:              \n                                  Param Sites:         ...                                 data dist             |\n                                         value         2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                data dist             |\n                                         value         2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[ 0.9886, -1.1196,  0.8352, -1.2174,  1.8712, -0.4530,  0.5685,
            1.0910],
          [-0.5117,  0....
           -0.0481],
          [-1.0756,  1.2655, -0.9730, -1.1596,  0.8449, -0.8886,  1.2840,
           -0.3786]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError

The above exception was the direct cause of the following exception:

input_dim = (8, 8), output_dim = (8,)

    @pytest.mark.parametrize("input_dim, output_dim",
                             [((8,), (8, 8)), ((8, 8), (8,)),
                              ((8,), (8,)), ((8, 8), (8, 8))])
    def test_ved_sites_dims(input_dim, output_dim):
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim)
>       guide_trace, model_trace = get_traces(model, x, y)

tests/test_models.py:152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[ 0.9886, -1.1196,  0.8352, -1.2174,  1.8712, -0.4530,  0.5685,
            1.0910],
          [-0.5117,  0....
           -0.0481],
          [-1.0756,  1.2655, -0.9730, -1.1596,  0.8449, -0.8886,  1.2840,
           -0.3786]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:              
E                                         Param Sites:              
E        encoder_z$$$feature_extractor.layers.0.weight  32   1 3   3
E          encoder_z$$$feature_extractor.layers.0.bias            32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32 3   3
E          encoder_z$$$feature_extractor.layers.3.bias            64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64 3   3
E          encoder_z$$$feature_extractor.layers.5.bias            64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64 3   3
E          encoder_z$$$feature_extractor.layers.8.bias           128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128 3   3
E         encoder_z$$$feature_extractor.layers.10.bias           128
E         encoder_z$$$features2latent.fc_latent.weight         4 512
E           encoder_z$$$features2latent.fc_latent.bias             4
E                                        Sample Sites:              
E                                            data dist             |
E                                                value         2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError
_________________ test_ved_sites_dims[input_dim2-output_dim2] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c420234c0>
args = (tensor([[[-1.6375,  0.6364,  0.2186, -0.3213,  0.8823,  1.1197, -1.9448,
          -1.6079]],

        [[ 0.0145, -0....,
          -0.0366]],

        [[ 1.6749, -0.0872,  0.2293,  0.4783,  2.1167, -1.5671, -0.1241,
          -0.1939]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c40163bc0>
shapes = '                                 Trace Shapes:            \n                                  Param Sites:           ...                                     data dist           |\n                                         value       2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                    data dist           |\n                                         value       2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:310: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))
input = tensor([[[-1.6375,  0.6364,  0.2186, -0.3213,  0.8823,  1.1197, -1.9448,
          -1.6079]],

        [[ 0.0145, -0.1509, -0.3490,  0.9857, -1.0097, -0.1606, -0.0552,
           0.3193]]])
weight = Parameter containing:
tensor([[[ 0.2975, -0.2548, -0.1119]],

        [[ 0.2710, -0.5435,  0.3462]],

        [[-0.118...,

        [[ 0.1856, -0.4329,  0.1160]],

        [[ 0.1387, -0.3866, -0.2739]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([ 0.1969,  0.1034, -0.2456, -0.1748,  0.5288, -0.1068,  0.3255,  0.2500,
        -0.3732,...   -0.3492,  0.0725,  0.5754, -0.3647,  0.3077, -0.3196, -0.5428, -0.1227],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv1d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _single(0), self.dilation, self.groups)
>       return F.conv1d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:306: RuntimeError

The above exception was the direct cause of the following exception:

input_dim = (8,), output_dim = (8,)

    @pytest.mark.parametrize("input_dim, output_dim",
                             [((8,), (8, 8)), ((8, 8), (8,)),
                              ((8,), (8,)), ((8, 8), (8, 8))])
    def test_ved_sites_dims(input_dim, output_dim):
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim)
>       guide_trace, model_trace = get_traces(model, x, y)

tests/test_models.py:152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:310: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))
input = tensor([[[-1.6375,  0.6364,  0.2186, -0.3213,  0.8823,  1.1197, -1.9448,
          -1.6079]],

        [[ 0.0145, -0.1509, -0.3490,  0.9857, -1.0097, -0.1606, -0.0552,
           0.3193]]])
weight = Parameter containing:
tensor([[[ 0.2975, -0.2548, -0.1119]],

        [[ 0.2710, -0.5435,  0.3462]],

        [[-0.118...,

        [[ 0.1856, -0.4329,  0.1160]],

        [[ 0.1387, -0.3866, -0.2739]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([ 0.1969,  0.1034, -0.2456, -0.1748,  0.5288, -0.1068,  0.3255,  0.2500,
        -0.3732,...   -0.3492,  0.0725,  0.5754, -0.3647,  0.3077, -0.3196, -0.5428, -0.1227],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv1d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _single(0), self.dilation, self.groups)
>       return F.conv1d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:            
E                                         Param Sites:            
E        encoder_z$$$feature_extractor.layers.0.weight  32   1   3
E          encoder_z$$$feature_extractor.layers.0.bias          32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32   3
E          encoder_z$$$feature_extractor.layers.3.bias          64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64   3
E          encoder_z$$$feature_extractor.layers.5.bias          64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64   3
E          encoder_z$$$feature_extractor.layers.8.bias         128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128   3
E         encoder_z$$$feature_extractor.layers.10.bias         128
E         encoder_z$$$features2latent.fc_latent.weight       4 256
E           encoder_z$$$features2latent.fc_latent.bias           4
E                                        Sample Sites:            
E                                            data dist           |
E                                                value       2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:306: RuntimeError
_________________ test_ved_sites_dims[input_dim3-output_dim3] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25bb3160>
args = (tensor([[[[-3.0860e-01,  1.4738e-01,  2.9071e-02,  1.4966e+00,  1.2010e+00,
            1.8181e+00, -5.7376e-01, -2.0...           -0.6061],
          [-1.2350, -0.0049, -0.9941,  1.3212, -1.4665,  0.8056, -0.9118,
            0.5297]]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c25976dc0>
shapes = '                                 Trace Shapes:              \n                                  Param Sites:         ...                                 data dist             |\n                                         value         2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                data dist             |\n                                         value         2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[-3.0860e-01,  1.4738e-01,  2.9071e-02,  1.4966e+00,  1.2010e+00,
            1.8181e+00, -5.7376e-01, -2.02...[-4.5077e-01, -4.2420e-01, -1.5408e+00, -3.6033e-01, -1.0298e-01,
           -8.0837e-01, -1.3590e-01, -8.1397e-01]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError

The above exception was the direct cause of the following exception:

input_dim = (8, 8), output_dim = (8, 8)

    @pytest.mark.parametrize("input_dim, output_dim",
                             [((8,), (8, 8)), ((8, 8), (8,)),
                              ((8,), (8,)), ((8, 8), (8, 8))])
    def test_ved_sites_dims(input_dim, output_dim):
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim)
>       guide_trace, model_trace = get_traces(model, x, y)

tests/test_models.py:152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[-3.0860e-01,  1.4738e-01,  2.9071e-02,  1.4966e+00,  1.2010e+00,
            1.8181e+00, -5.7376e-01, -2.02...[-4.5077e-01, -4.2420e-01, -1.5408e+00, -3.6033e-01, -1.0298e-01,
           -8.0837e-01, -1.3590e-01, -8.1397e-01]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:              
E                                         Param Sites:              
E        encoder_z$$$feature_extractor.layers.0.weight  32   1 3   3
E          encoder_z$$$feature_extractor.layers.0.bias            32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32 3   3
E          encoder_z$$$feature_extractor.layers.3.bias            64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64 3   3
E          encoder_z$$$feature_extractor.layers.5.bias            64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64 3   3
E          encoder_z$$$feature_extractor.layers.8.bias           128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128 3   3
E         encoder_z$$$feature_extractor.layers.10.bias           128
E         encoder_z$$$features2latent.fc_latent.weight         4 512
E           encoder_z$$$features2latent.fc_latent.bias             4
E                                        Sample Sites:              
E                                            data dist             |
E                                                value         2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError
__________________ test_ved_sites_fn[input_dim0-output_dim0] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25daee90>
args = (tensor([[[-1.1769, -0.8148,  0.5350,  1.4876,  1.4627,  1.1176, -0.5346,
           0.0964]],

        [[-0.0224, -0.... 4.4717e-02, -5.1001e-01, -1.5577e+00,  2.7705e+00,  1.9424e+00,
            3.3849e-01, -1.4441e+00,  5.0166e-01]]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c25b47840>
shapes = '                                 Trace Shapes:            \n                                  Param Sites:           ...                                     data dist           |\n                                         value       2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                    data dist           |\n                                         value       2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:310: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))
input = tensor([[[-1.1769, -0.8148,  0.5350,  1.4876,  1.4627,  1.1176, -0.5346,
           0.0964]],

        [[-0.0224, -0.8603, -0.4629,  0.6778, -0.1797, -0.0271, -0.3249,
           0.6506]]])
weight = Parameter containing:
tensor([[[ 0.2975, -0.2548, -0.1119]],

        [[ 0.2710, -0.5435,  0.3462]],

        [[-0.118...,

        [[ 0.1856, -0.4329,  0.1160]],

        [[ 0.1387, -0.3866, -0.2739]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([ 0.1969,  0.1034, -0.2456, -0.1748,  0.5288, -0.1068,  0.3255,  0.2500,
        -0.3732,...   -0.3492,  0.0725,  0.5754, -0.3647,  0.3077, -0.3196, -0.5428, -0.1227],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv1d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _single(0), self.dilation, self.groups)
>       return F.conv1d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:306: RuntimeError

The above exception was the direct cause of the following exception:

input_dim = (8,), output_dim = (8, 8)

    @pytest.mark.parametrize("input_dim, output_dim",
                             [((8,), (8, 8)), ((8, 8), (8,)),
                              ((8,), (8,)), ((8, 8), (8, 8))])
    def test_ved_sites_fn(input_dim, output_dim):
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim)
>       guide_trace, model_trace = get_traces(model, x, y)

tests/test_models.py:168: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:310: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))
input = tensor([[[-1.1769, -0.8148,  0.5350,  1.4876,  1.4627,  1.1176, -0.5346,
           0.0964]],

        [[-0.0224, -0.8603, -0.4629,  0.6778, -0.1797, -0.0271, -0.3249,
           0.6506]]])
weight = Parameter containing:
tensor([[[ 0.2975, -0.2548, -0.1119]],

        [[ 0.2710, -0.5435,  0.3462]],

        [[-0.118...,

        [[ 0.1856, -0.4329,  0.1160]],

        [[ 0.1387, -0.3866, -0.2739]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([ 0.1969,  0.1034, -0.2456, -0.1748,  0.5288, -0.1068,  0.3255,  0.2500,
        -0.3732,...   -0.3492,  0.0725,  0.5754, -0.3647,  0.3077, -0.3196, -0.5428, -0.1227],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv1d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _single(0), self.dilation, self.groups)
>       return F.conv1d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:            
E                                         Param Sites:            
E        encoder_z$$$feature_extractor.layers.0.weight  32   1   3
E          encoder_z$$$feature_extractor.layers.0.bias          32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32   3
E          encoder_z$$$feature_extractor.layers.3.bias          64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64   3
E          encoder_z$$$feature_extractor.layers.5.bias          64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64   3
E          encoder_z$$$feature_extractor.layers.8.bias         128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128   3
E         encoder_z$$$feature_extractor.layers.10.bias         128
E         encoder_z$$$features2latent.fc_latent.weight       4 256
E           encoder_z$$$features2latent.fc_latent.bias           4
E                                        Sample Sites:            
E                                            data dist           |
E                                                value       2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:306: RuntimeError
__________________ test_ved_sites_fn[input_dim1-output_dim1] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401ae9e0>
args = (tensor([[[[ 0.9886, -1.1196,  0.8352, -1.2174,  1.8712, -0.4530,  0.5685,
            1.0910],
          [-0.5117,  0...,
           1.3426]],

        [[ 0.9121,  0.4938, -2.1002, -1.6765, -0.0365, -0.6057, -1.0779,
           0.3026]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c25aa82c0>
shapes = '                                 Trace Shapes:              \n                                  Param Sites:         ...                                 data dist             |\n                                         value         2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                data dist             |\n                                         value         2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[ 0.9886, -1.1196,  0.8352, -1.2174,  1.8712, -0.4530,  0.5685,
            1.0910],
          [-0.5117,  0....
           -0.0481],
          [-1.0756,  1.2655, -0.9730, -1.1596,  0.8449, -0.8886,  1.2840,
           -0.3786]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError

The above exception was the direct cause of the following exception:

input_dim = (8, 8), output_dim = (8,)

    @pytest.mark.parametrize("input_dim, output_dim",
                             [((8,), (8, 8)), ((8, 8), (8,)),
                              ((8,), (8,)), ((8, 8), (8, 8))])
    def test_ved_sites_fn(input_dim, output_dim):
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim)
>       guide_trace, model_trace = get_traces(model, x, y)

tests/test_models.py:168: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[ 0.9886, -1.1196,  0.8352, -1.2174,  1.8712, -0.4530,  0.5685,
            1.0910],
          [-0.5117,  0....
           -0.0481],
          [-1.0756,  1.2655, -0.9730, -1.1596,  0.8449, -0.8886,  1.2840,
           -0.3786]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:              
E                                         Param Sites:              
E        encoder_z$$$feature_extractor.layers.0.weight  32   1 3   3
E          encoder_z$$$feature_extractor.layers.0.bias            32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32 3   3
E          encoder_z$$$feature_extractor.layers.3.bias            64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64 3   3
E          encoder_z$$$feature_extractor.layers.5.bias            64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64 3   3
E          encoder_z$$$feature_extractor.layers.8.bias           128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128 3   3
E         encoder_z$$$feature_extractor.layers.10.bias           128
E         encoder_z$$$features2latent.fc_latent.weight         4 512
E           encoder_z$$$features2latent.fc_latent.bias             4
E                                        Sample Sites:              
E                                            data dist             |
E                                                value         2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError
__________________ test_ved_sites_fn[input_dim2-output_dim2] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c5e21f460>
args = (tensor([[[-1.6375,  0.6364,  0.2186, -0.3213,  0.8823,  1.1197, -1.9448,
          -1.6079]],

        [[ 0.0145, -0....,
          -0.0366]],

        [[ 1.6749, -0.0872,  0.2293,  0.4783,  2.1167, -1.5671, -0.1241,
          -0.1939]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c25ab9380>
shapes = '                                 Trace Shapes:            \n                                  Param Sites:           ...                                     data dist           |\n                                         value       2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                    data dist           |\n                                         value       2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:310: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))
input = tensor([[[-1.6375,  0.6364,  0.2186, -0.3213,  0.8823,  1.1197, -1.9448,
          -1.6079]],

        [[ 0.0145, -0.1509, -0.3490,  0.9857, -1.0097, -0.1606, -0.0552,
           0.3193]]])
weight = Parameter containing:
tensor([[[ 0.2975, -0.2548, -0.1119]],

        [[ 0.2710, -0.5435,  0.3462]],

        [[-0.118...,

        [[ 0.1856, -0.4329,  0.1160]],

        [[ 0.1387, -0.3866, -0.2739]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([ 0.1969,  0.1034, -0.2456, -0.1748,  0.5288, -0.1068,  0.3255,  0.2500,
        -0.3732,...   -0.3492,  0.0725,  0.5754, -0.3647,  0.3077, -0.3196, -0.5428, -0.1227],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv1d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _single(0), self.dilation, self.groups)
>       return F.conv1d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:306: RuntimeError

The above exception was the direct cause of the following exception:

input_dim = (8,), output_dim = (8,)

    @pytest.mark.parametrize("input_dim, output_dim",
                             [((8,), (8, 8)), ((8, 8), (8,)),
                              ((8,), (8,)), ((8, 8), (8, 8))])
    def test_ved_sites_fn(input_dim, output_dim):
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim)
>       guide_trace, model_trace = get_traces(model, x, y)

tests/test_models.py:168: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:310: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))
input = tensor([[[-1.6375,  0.6364,  0.2186, -0.3213,  0.8823,  1.1197, -1.9448,
          -1.6079]],

        [[ 0.0145, -0.1509, -0.3490,  0.9857, -1.0097, -0.1606, -0.0552,
           0.3193]]])
weight = Parameter containing:
tensor([[[ 0.2975, -0.2548, -0.1119]],

        [[ 0.2710, -0.5435,  0.3462]],

        [[-0.118...,

        [[ 0.1856, -0.4329,  0.1160]],

        [[ 0.1387, -0.3866, -0.2739]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([ 0.1969,  0.1034, -0.2456, -0.1748,  0.5288, -0.1068,  0.3255,  0.2500,
        -0.3732,...   -0.3492,  0.0725,  0.5754, -0.3647,  0.3077, -0.3196, -0.5428, -0.1227],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv1d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _single(0), self.dilation, self.groups)
>       return F.conv1d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:            
E                                         Param Sites:            
E        encoder_z$$$feature_extractor.layers.0.weight  32   1   3
E          encoder_z$$$feature_extractor.layers.0.bias          32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32   3
E          encoder_z$$$feature_extractor.layers.3.bias          64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64   3
E          encoder_z$$$feature_extractor.layers.5.bias          64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64   3
E          encoder_z$$$feature_extractor.layers.8.bias         128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128   3
E         encoder_z$$$feature_extractor.layers.10.bias         128
E         encoder_z$$$features2latent.fc_latent.weight       4 256
E           encoder_z$$$features2latent.fc_latent.bias           4
E                                        Sample Sites:            
E                                            data dist           |
E                                                value       2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:306: RuntimeError
__________________ test_ved_sites_fn[input_dim3-output_dim3] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25ddfd60>
args = (tensor([[[[-3.0860e-01,  1.4738e-01,  2.9071e-02,  1.4966e+00,  1.2010e+00,
            1.8181e+00, -5.7376e-01, -2.0...           -0.6061],
          [-1.2350, -0.0049, -0.9941,  1.3212, -1.4665,  0.8056, -0.9118,
            0.5297]]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c25c86dc0>
shapes = '                                 Trace Shapes:              \n                                  Param Sites:         ...                                 data dist             |\n                                         value         2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                data dist             |\n                                         value         2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[-3.0860e-01,  1.4738e-01,  2.9071e-02,  1.4966e+00,  1.2010e+00,
            1.8181e+00, -5.7376e-01, -2.02...[-4.5077e-01, -4.2420e-01, -1.5408e+00, -3.6033e-01, -1.0298e-01,
           -8.0837e-01, -1.3590e-01, -8.1397e-01]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError

The above exception was the direct cause of the following exception:

input_dim = (8, 8), output_dim = (8, 8)

    @pytest.mark.parametrize("input_dim, output_dim",
                             [((8,), (8, 8)), ((8, 8), (8,)),
                              ((8,), (8,)), ((8, 8), (8, 8))])
    def test_ved_sites_fn(input_dim, output_dim):
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim)
>       guide_trace, model_trace = get_traces(model, x, y)

tests/test_models.py:168: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[-3.0860e-01,  1.4738e-01,  2.9071e-02,  1.4966e+00,  1.2010e+00,
            1.8181e+00, -5.7376e-01, -2.02...[-4.5077e-01, -4.2420e-01, -1.5408e+00, -3.6033e-01, -1.0298e-01,
           -8.0837e-01, -1.3590e-01, -8.1397e-01]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:              
E                                         Param Sites:              
E        encoder_z$$$feature_extractor.layers.0.weight  32   1 3   3
E          encoder_z$$$feature_extractor.layers.0.bias            32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32 3   3
E          encoder_z$$$feature_extractor.layers.3.bias            64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64 3   3
E          encoder_z$$$feature_extractor.layers.5.bias            64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64 3   3
E          encoder_z$$$feature_extractor.layers.8.bias           128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128 3   3
E         encoder_z$$$feature_extractor.layers.10.bias           128
E         encoder_z$$$features2latent.fc_latent.weight         4 512
E           encoder_z$$$features2latent.fc_latent.bias             4
E                                        Sample Sites:              
E                                            data dist             |
E                                                value         2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError
_____________________ test_jtrvae_cont_sites_dims_2d[None] _____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25cc6380>
args = (tensor([[[-1.1769e+00, -8.1484e-01,  5.3498e-01,  1.4876e+00,  1.4627e+00,
           1.1176e+00, -5.3457e-01,  9.637...[ 1.2411e-01,  2.3141e+00,  2.0623e-01, -1.5578e-01,  7.2617e-01,
           7.0028e-01,  5.1603e-01, -4.3146e-01]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25e41180>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.1769e+00, -8.1484e-01,  5.3498e-01,  1.4876e+00,  1.4627e+00,
          1.1176e+00, -5.3457e-01,  9.6376e-...-01,  1.2411e-01,  2.3141e+00,  2.0623e-01, -1.5578e-01,
          7.2617e-01,  7.0028e-01,  5.1603e-01, -4.3146e-01]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.1769e+00, -8.1484e-01,  5.3498e-01,  1.4876e+00,  1.4627e+00,
          1.1176e+00, -5.3457e-01,  9.6376e-...-01,  1.2411e-01,  2.3141e+00,  2.0623e-01, -1.5578e-01,
          7.2617e-01,  7.0028e-01,  5.1603e-01, -4.3146e-01]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_jtrvae_cont_sites_dims_2d[invariances1] _________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c40181090>
args = (tensor([[[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,
           1.0019],
         [ 0.9309,  0.74...5,
          -1.6311],
         [ 1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970,
          -0.3918]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25b37ec0>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -...  0.0575, -1.3188, -1.9465, -1.6311,
          1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970, -0.3918]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -...  0.0575, -1.3188, -1.9465, -1.6311,
          1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970, -0.3918]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_jtrvae_cont_sites_dims_2d[invariances2] _________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d5d930>
args = (tensor([[[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,
           1.8105],
         [-0.1537, -0.65...8,
          -0.2639],
         [ 0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,
           1.0813]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25db6ec0>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_jtrvae_cont_sites_dims_2d[invariances3] _________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25e15b70>
args = (tensor([[[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,
           1.8105],
         [-0.1537, -0.65...8,
          -0.2639],
         [ 0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,
           1.0813]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25b72e40>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_jtrvae_cont_sites_dims_2d[invariances4] _________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25c2fbb0>
args = (tensor([[[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154,
          -1.8278],
         [-0.1262,  0.87...3,
          -0.4647],
         [ 1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258,
          -1.2922]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25b59f40>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_dims_2d(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
______________________ test_jtrvae_disc_sites_dims[None] _______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401a6f20>
args = (tensor([[[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154,
          -1.8278],
         [-0.1262,  0.87...3,
          -0.4647],
         [ 1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258,
          -1.2922]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c420cb080>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:203: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_jtrvae_disc_sites_dims[invariances1] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25de4cd0>
args = (tensor([[[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,
           1.0019],
         [ 0.9309,  0.74...5,
          -1.6311],
         [ 1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970,
          -0.3918]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25ab5440>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -...  0.0575, -1.3188, -1.9465, -1.6311,
          1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970, -0.3918]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:203: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -...  0.0575, -1.3188, -1.9465, -1.6311,
          1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970, -0.3918]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_jtrvae_disc_sites_dims[invariances2] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d2a170>
args = (tensor([[[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,
           1.8105],
         [-0.1537, -0.65...8,
          -0.2639],
         [ 0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,
           1.0813]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c259b1280>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:203: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_jtrvae_disc_sites_dims[invariances3] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c420a6230>
args = (tensor([[[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,
           1.8105],
         [-0.1537, -0.65...8,
          -0.2639],
         [ 0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,
           1.0813]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25cf3f80>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:203: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_jtrvae_disc_sites_dims[invariances4] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c4013b310>
args = (tensor([[[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154,
          -1.8278],
         [-0.1262,  0.87...3,
          -0.4647],
         [ 1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258,
          -1.2922]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25951980>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:203: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_______________________ test_jtrvae_cont_sites_fn[None] ________________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c420347c0>
args = (tensor([[[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154,
          -1.8278],
         [-0.1262,  0.87...3,
          -0.4647],
         [ 1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258,
          -1.2922]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c40114340>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_jtrvae_cont_sites_fn[invariances1] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401805b0>
args = (tensor([[[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,
           1.0019],
         [ 0.9309,  0.74...5,
          -1.6311],
         [ 1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970,
          -0.3918]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c42026800>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -...  0.0575, -1.3188, -1.9465, -1.6311,
          1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970, -0.3918]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -...  0.0575, -1.3188, -1.9465, -1.6311,
          1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970, -0.3918]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_jtrvae_cont_sites_fn[invariances2] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c4013cca0>
args = (tensor([[[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,
           1.8105],
         [-0.1537, -0.65...8,
          -0.2639],
         [ 0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,
           1.0813]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a7a700>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_jtrvae_cont_sites_fn[invariances3] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25c0b190>
args = (tensor([[[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,
           1.8105],
         [-0.1537, -0.65...8,
          -0.2639],
         [ 0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,
           1.0813]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c5eb67f00>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_jtrvae_cont_sites_fn[invariances4] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c2597e740>
args = (tensor([[[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154,
          -1.8278],
         [-0.1262,  0.87...3,
          -0.4647],
         [ 1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258,
          -1.2922]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25bf6a80>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_______________________ test_jtrvae_disc_sites_fn[None] ________________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25dafb80>
args = (tensor([[[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154,
          -1.8278],
         [-0.1262,  0.87...3,
          -0.4647],
         [ 1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258,
          -1.2922]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c401bb300>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:236: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_jtrvae_disc_sites_fn[invariances1] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c4012c430>
args = (tensor([[[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,
           1.0019],
         [ 0.9309,  0.74...5,
          -1.6311],
         [ 1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970,
          -0.3918]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25e48e40>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -...  0.0575, -1.3188, -1.9465, -1.6311,
          1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970, -0.3918]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:236: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -...  0.0575, -1.3188, -1.9465, -1.6311,
          1.0709,  0.1267,  0.0197, -0.6819, -1.2803,  0.9316,  0.5970, -0.3918]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_jtrvae_disc_sites_fn[invariances2] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25cc6bf0>
args = (tensor([[[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,
           1.8105],
         [-0.1537, -0.65...8,
          -0.2639],
         [ 0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,
           1.0813]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c259d8b40>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:236: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   3 128
E                encoder_z$$$fc11.bias       3
E              encoder_z$$$fc12.weight   3 128
E                encoder_z$$$fc12.bias       3
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_jtrvae_disc_sites_fn[invariances3] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401ad660>
args = (tensor([[[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,
           1.8105],
         [-0.1537, -0.65...8,
          -0.2639],
         [ 0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,
           1.0813]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a5b2c0>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:236: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.7069, -0.8419, -0.1002,  1.8245,  0.5220,  1.5653,  0.4131,  1.8105,
         -0.1537, -0.6595,  1.0711,  ... -1.0679, -0.2631, -0.5188, -0.2639,
          0.3102, -0.0482,  0.5397,  2.0333,  0.7899, -0.3394, -1.5091,  1.0813]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_jtrvae_disc_sites_fn[invariances4] ____________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d2bbb0>
args = (tensor([[[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154,
          -1.8278],
         [-0.1262,  0.87...3,
          -0.4647],
         [ 1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258,
          -1.2922]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c259ff8c0>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_jtrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(*data_dim)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.jiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:236: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   6 128
E                encoder_z$$$fc11.bias       6
E              encoder_z$$$fc12.weight   6 128
E                encoder_z$$$fc12.bias       6
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
______________________ test_sstrvae_cont_sites_dims[None] ______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d25ae0>
args = (tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387, ...3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c259537c0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:251: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 1.3885,  0.6405,  1.3994,  1.9494,  3.5272,  0.4160,  0.1154, -1.8278,
         -0.1262,  0.8748, -0.3387,  ... -3.0773, -0.5547,  0.2233, -0.4647,
          1.4057, -0.3006, -0.0718,  1.4559, -1.5397, -0.0393, -0.5258, -1.2922]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_sstrvae_cont_sites_dims[invariances1] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25dc2350>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25df7340>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:251: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_sstrvae_cont_sites_dims[invariances2] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25ad35e0>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c401156c0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:251: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_sstrvae_cont_sites_dims[invariances3] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c40138490>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a2acc0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:251: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_sstrvae_cont_sites_dims[invariances4] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401455a0>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c40102580>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:251: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
______________________ test_sstrvae_disc_sites_dims[None] ______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c42021300>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a94600>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_sstrvae_disc_sites_dims[invariances1] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25bb37c0>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c400f1800>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_sstrvae_disc_sites_dims[invariances2] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d2e230>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25b26540>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_sstrvae_disc_sites_dims[invariances3] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25a18160>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25dfef80>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_sstrvae_disc_sites_dims[invariances4] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25e17490>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25af9200>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:270: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_______________________ test_sstrvae_cont_sites_fn[None] _______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25e3f760>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c243b7500>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_sstrvae_cont_sites_fn[invariances1] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25b87520>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25d14540>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_sstrvae_cont_sites_fn[invariances2] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25b61b10>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a0f4c0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_sstrvae_cont_sites_fn[invariances3] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401c0610>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25dfa640>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_sstrvae_cont_sites_fn[invariances4] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c4013bb50>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a80100>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_cont_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_______________________ test_sstrvae_disc_sites_fn[None] _______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d79780>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c400dfb80>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:303: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_sstrvae_disc_sites_fn[invariances1] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c42003460>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a0ebc0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:303: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_sstrvae_disc_sites_fn[invariances2] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25c2d990>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a95f40>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:303: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_sstrvae_disc_sites_fn[invariances3] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25dbd750>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a50380>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:303: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_sstrvae_disc_sites_fn[invariances4] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c4013d6f0>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c243cd140>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_sstrvae_disc_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ssiVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_enum_traces(model, x)

tests/test_models.py:303: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_____________________ test_ssregvae_cont_sites_dims[None] ______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25ac9840>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a0dd80>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ssregvae_cont_sites_dims[invariances1] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25c2ce50>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25b27580>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ssregvae_cont_sites_dims[invariances2] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d48d00>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25bd9000>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ssregvae_cont_sites_dims[invariances3] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c40189f90>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c400ea980>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ssregvae_cont_sites_dims[invariances4] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25dbc9d0>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25dba0c0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_cont_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_____________________ test_ssregvae_disc_sites_dims[None] ______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25daf3a0>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c2599dd80>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:338: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ssregvae_disc_sites_dims[invariances1] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c42042440>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a61400>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:338: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ssregvae_disc_sites_dims[invariances2] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c400d1de0>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25b45b80>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:338: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ssregvae_disc_sites_dims[invariances3] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401ad8a0>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25db9a40>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:338: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_ssregvae_disc_sites_dims[invariances4] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c40167e80>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25df57c0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_disc_sites_dims(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:338: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_______________________ test_ssregvae_vae_sites_fn[None] _______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401a5330>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c40112800>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_vae_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:355: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_ssregvae_vae_sites_fn[invariances1] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25acb2e0>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25e43f00>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_vae_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:355: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_ssregvae_vae_sites_fn[invariances2] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d67cd0>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a5afc0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_vae_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:355: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_ssregvae_vae_sites_fn[invariances3] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c259bce80>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25ad7480>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_vae_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:355: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_ssregvae_vae_sites_fn[invariances4] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25bb8fa0>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25bdaac0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_vae_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:355: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_______________________ test_ssregvae_reg_sites_fn[None] _______________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25b5c610>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25c57c80>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_reg_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:371: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_ssregvae_reg_sites_fn[invariances1] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c24399f30>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c2440ec00>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_reg_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:371: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -...  1.3837,  0.6552,  1.8613,  0.4450,
          0.2300,  0.6097, -0.5011,  1.2943, -0.3499, -0.3639, -0.9388, -1.8747]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_ssregvae_reg_sites_fn[invariances2] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25cffc10>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c244324c0>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_reg_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:371: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_ssregvae_reg_sites_fn[invariances3] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25c2f010>
args = (tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e...1,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25bd6280>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_reg_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:371: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-9.3968e-02, -6.5820e-01,  1.1310e+00,  1.1592e+00,  2.4254e+00,
          1.6006e-02,  6.5917e-01, -1.4369e-...-01,  9.8212e-02, -2.0218e-01,  2.8052e-01,  7.3564e-01,
         -4.2218e-01, -1.4079e+00, -1.0611e-01, -1.0758e+00]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
___________________ test_ssregvae_reg_sites_fn[invariances4] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25c5c820>
args = (tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, ...0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25d6ec80>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

invariances = ['s', 'r', 't']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's'], ['s', 'r', 't']])
    def test_ssregvae_reg_sites_fn(invariances):
        data_dim = (3, 8, 8)
        x = torch.randn(data_dim[0], torch.prod(tt(data_dim[1:])).item())
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        model = models.ss_reg_iVAE(data_dim[1:], 2, 3, invariances=invariances)
>       guide_trace, model_trace = get_traces(model, x)

tests/test_models.py:371: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ss_reg_ivae.py:206: in guide
    c = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:303: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.4740, -1.2937, -0.7698,  0.2754,
          0.2135, -0.5036, -0.6553, -2.2507, -0.4652,  0.5031,  0.8617,  2.2475]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________ test_trvae_decoder_sampler[gaussian-Normal] __________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c401a5930>
args = (tensor([[[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380,
          -0.5843],
         [-0.3981,  2.04...1,
           0.3144],
         [-0.7470, -0.2634,  0.6142,  0.3525,  0.5581, -0.2278,  1.9765,
           0.6381]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25ac4b00>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   2   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.8677, -0.0337,  0.4461,  0.3144,
         -0.7470, -0.2634,  0.6142,  0.3525,  0.5581, -0.2278,  1.9765,  0.6381]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'gaussian', expected_dist = <class 'pyro.distributions.torch.Normal'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_trvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 8, 8)
        x = torch.randn(*data_dim)
        model = models.iVAE(data_dim[1:], coord=1, sampler_d=sampler)
>       _, model_trace = get_traces(model, x)

tests/test_models.py:384: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3511, -0.6110,  1.6976,  0.7937,  0.1630,  0.8986,  0.5380, -0.5843,
         -0.3981,  2.0471,  0.4168, -...  0.8677, -0.0337,  0.4461,  0.3144,
         -0.7470, -0.2634,  0.6142,  0.3525,  0.5581, -0.2278,  1.9765,  0.6381]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E                        Sample Sites:        
E                            data dist       |
E                                value   2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_______________ test_trvae_decoder_sampler[bernoulli-Bernoulli] ________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25db0640>
args = (tensor([[[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370,
          -1.0575],
         [-1.2395,  1.04...7,
          -1.4547],
         [-0.4680,  1.6245, -0.6019,  0.5916, -0.0533,  1.0359,  0.6939,
           0.1552]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25d601c0>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   2   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370, -1.0575,
         -1.2395,  1.0436, -0.7263, -...  0.2620,  0.0781, -1.2227, -1.4547,
         -0.4680,  1.6245, -0.6019,  0.5916, -0.0533,  1.0359,  0.6939,  0.1552]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'bernoulli'
expected_dist = <class 'pyro.distributions.torch.Bernoulli'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_trvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 8, 8)
        x = torch.randn(*data_dim)
        model = models.iVAE(data_dim[1:], coord=1, sampler_d=sampler)
>       _, model_trace = get_traces(model, x)

tests/test_models.py:384: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370, -1.0575,
         -1.2395,  1.0436, -0.7263, -...  0.2620,  0.0781, -1.2227, -1.4547,
         -0.4680,  1.6245, -0.6019,  0.5916, -0.0533,  1.0359,  0.6939,  0.1552]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E                        Sample Sites:        
E                            data dist       |
E                                value   2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_____ test_trvae_decoder_sampler[continuous_bernoulli-ContinuousBernoulli] _____

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25dd97b0>
args = (tensor([[[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370,
          -1.0575],
         [-1.2395,  1.04...7,
          -1.4547],
         [-0.4680,  1.6245, -0.6019,  0.5916, -0.0533,  1.0359,  0.6939,
           0.1552]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25a79240>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...                 Sample Sites:        \n                     data dist       |\n                         value   2   |'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...                Sample Sites:        \n                     data dist       |\n                         value   2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370, -1.0575,
         -1.2395,  1.0436, -0.7263, -...  0.2620,  0.0781, -1.2227, -1.4547,
         -0.4680,  1.6245, -0.6019,  0.5916, -0.0533,  1.0359,  0.6939,  0.1552]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'continuous_bernoulli'
expected_dist = <class 'pyro.distributions.torch.ContinuousBernoulli'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_trvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 8, 8)
        x = torch.randn(*data_dim)
        model = models.iVAE(data_dim[1:], coord=1, sampler_d=sampler)
>       _, model_trace = get_traces(model, x)

tests/test_models.py:384: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ivae.py:218: in guide
    z_loc, z_scale = self.encoder_z(enc_args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:58: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370, -1.0575,
         -1.2395,  1.0436, -0.7263, -...  0.2620,  0.0781, -1.2227, -1.4547,
         -0.4680,  1.6245, -0.6019,  0.5916, -0.0533,  1.0359,  0.6939,  0.1552]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E                        Sample Sites:        
E                            data dist       |
E                                value   2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
__________________ test_ved_decoder_sampler[gaussian-Normal] ___________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c4203df00>
args = (tensor([[[[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370,
           -1.0575],
          [-1.2395,  1...,
          -0.7780]],

        [[-1.3467, -0.3455,  0.1358, -0.3486,  1.4933,  0.1280, -0.1530,
           0.5425]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c4200f000>
shapes = '                                 Trace Shapes:              \n                                  Param Sites:         ...                                 data dist             |\n                                         value         2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                data dist             |\n                                         value         2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370,
           -1.0575],
          [-1.2395,  1....
           -1.4547],
          [-0.4680,  1.6245, -0.6019,  0.5916, -0.0533,  1.0359,  0.6939,
            0.1552]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'gaussian', expected_dist = <class 'pyro.distributions.torch.Normal'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_ved_decoder_sampler(sampler, expected_dist):
        input_dim = (8, 8)
        output_dim = (8,)
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim, sampler_d=sampler)
>       _, model_trace = get_traces(model, x, y)

tests/test_models.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[ 0.3648,  2.0377, -1.0485, -0.0448,  1.6706, -1.0507,  0.4370,
           -1.0575],
          [-1.2395,  1....
           -1.4547],
          [-0.4680,  1.6245, -0.6019,  0.5916, -0.0533,  1.0359,  0.6939,
            0.1552]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:              
E                                         Param Sites:              
E        encoder_z$$$feature_extractor.layers.0.weight  32   1 3   3
E          encoder_z$$$feature_extractor.layers.0.bias            32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32 3   3
E          encoder_z$$$feature_extractor.layers.3.bias            64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64 3   3
E          encoder_z$$$feature_extractor.layers.5.bias            64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64 3   3
E          encoder_z$$$feature_extractor.layers.8.bias           128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128 3   3
E         encoder_z$$$feature_extractor.layers.10.bias           128
E         encoder_z$$$features2latent.fc_latent.weight         4 512
E           encoder_z$$$features2latent.fc_latent.bias             4
E                                        Sample Sites:              
E                                            data dist             |
E                                                value         2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError
________________ test_ved_decoder_sampler[bernoulli-Bernoulli] _________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25c9bfd0>
args = (tensor([[[[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
            1.1197e+00, -1.9448e+00, -1.6...,
          -0.6688]],

        [[-1.7651,  1.4899, -0.3563,  1.1248, -0.2123, -0.3812,  0.7273,
          -0.5078]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c243bca80>
shapes = '                                 Trace Shapes:              \n                                  Param Sites:         ...                                 data dist             |\n                                         value         2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                data dist             |\n                                         value         2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
            1.1197e+00, -1.9448e+00, -1.60...[ 9.1594e-01,  1.8601e+00, -1.4380e+00,  1.5388e+00, -9.8884e-01,
           -9.5761e-01, -9.7409e-01,  1.7627e-02]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'bernoulli'
expected_dist = <class 'pyro.distributions.torch.Bernoulli'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_ved_decoder_sampler(sampler, expected_dist):
        input_dim = (8, 8)
        output_dim = (8,)
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim, sampler_d=sampler)
>       _, model_trace = get_traces(model, x, y)

tests/test_models.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
            1.1197e+00, -1.9448e+00, -1.60...[ 9.1594e-01,  1.8601e+00, -1.4380e+00,  1.5388e+00, -9.8884e-01,
           -9.5761e-01, -9.7409e-01,  1.7627e-02]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:              
E                                         Param Sites:              
E        encoder_z$$$feature_extractor.layers.0.weight  32   1 3   3
E          encoder_z$$$feature_extractor.layers.0.bias            32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32 3   3
E          encoder_z$$$feature_extractor.layers.3.bias            64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64 3   3
E          encoder_z$$$feature_extractor.layers.5.bias            64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64 3   3
E          encoder_z$$$feature_extractor.layers.8.bias           128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128 3   3
E         encoder_z$$$feature_extractor.layers.10.bias           128
E         encoder_z$$$features2latent.fc_latent.weight         4 512
E           encoder_z$$$features2latent.fc_latent.bias             4
E                                        Sample Sites:              
E                                            data dist             |
E                                                value         2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError
______ test_ved_decoder_sampler[continuous_bernoulli-ContinuousBernoulli] ______

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c2596b8e0>
args = (tensor([[[[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
            1.1197e+00, -1.9448e+00, -1.6...,
          -0.6688]],

        [[-1.7651,  1.4899, -0.3563,  1.1248, -0.2123, -0.3812,  0.7273,
          -0.5078]]]))
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor')
traceback = <traceback object at 0x7f7c40120e40>
shapes = '                                 Trace Shapes:              \n                                  Param Sites:         ...                                 data dist             |\n                                         value         2   |'
exc = RuntimeError('Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input shou...                                data dist             |\n                                         value         2   |')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
            1.1197e+00, -1.9448e+00, -1.60...[ 9.1594e-01,  1.8601e+00, -1.4380e+00,  1.5388e+00, -9.8884e-01,
           -9.5761e-01, -9.7409e-01,  1.7627e-02]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'continuous_bernoulli'
expected_dist = <class 'pyro.distributions.torch.ContinuousBernoulli'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_ved_decoder_sampler(sampler, expected_dist):
        input_dim = (8, 8)
        output_dim = (8,)
        x = torch.randn(2, 1, *input_dim)
        y = torch.randn(2, 1, *output_dim)
        model = models.VED(input_dim, output_dim, sampler_d=sampler)
>       _, model_trace = get_traces(model, x, y)

tests/test_models.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:22: in get_traces
    guide_trace = pyro.poutine.trace(model.guide).get_trace(*args)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
pyroved/models/ved.py:160: in guide
    z_loc, z_scale = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:60: in forward
    x = self.feature_extractor(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/conv.py:196: in forward
    return self.layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:460: in forward
    return self._conv_forward(input, self.weight, self.bias)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
input = tensor([[[[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
            1.1197e+00, -1.9448e+00, -1.60...[ 9.1594e-01,  1.8601e+00, -1.4380e+00,  1.5388e+00, -9.8884e-01,
           -9.5761e-01, -9.7409e-01,  1.7627e-02]]]])
weight = Parameter containing:
tensor([[[[ 0.1718, -0.1471, -0.0646],
          [ 0.1565, -0.3138,  0.1999],
          [-0.0686...,
          [ 0.2884,  0.0984, -0.1074],
          [-0.1636, -0.2907,  0.2805]]]], device='cuda:0', requires_grad=True)
bias = Parameter containing:
tensor([-0.0631,  0.0673,  0.0123, -0.2124,  0.1877,  0.1868,  0.0168, -0.1894,
        -0.1416,...   -0.3134, -0.1265,  0.2186, -0.3265, -0.1166,  0.2031,  0.1921,  0.1231],
       device='cuda:0', requires_grad=True)

    def _conv_forward(self, input: Tensor, weight: Tensor, bias: Optional[Tensor]):
        if self.padding_mode != 'zeros':
            return F.conv2d(F.pad(input, self._reversed_padding_repeated_twice, mode=self.padding_mode),
                            weight, bias, self.stride,
                            _pair(0), self.dilation, self.groups)
>       return F.conv2d(input, weight, bias, self.stride,
                        self.padding, self.dilation, self.groups)
E       RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
E                                        Trace Shapes:              
E                                         Param Sites:              
E        encoder_z$$$feature_extractor.layers.0.weight  32   1 3   3
E          encoder_z$$$feature_extractor.layers.0.bias            32
E        encoder_z$$$feature_extractor.layers.3.weight  64  32 3   3
E          encoder_z$$$feature_extractor.layers.3.bias            64
E        encoder_z$$$feature_extractor.layers.5.weight  64  64 3   3
E          encoder_z$$$feature_extractor.layers.5.bias            64
E        encoder_z$$$feature_extractor.layers.8.weight 128  64 3   3
E          encoder_z$$$feature_extractor.layers.8.bias           128
E       encoder_z$$$feature_extractor.layers.10.weight 128 128 3   3
E         encoder_z$$$feature_extractor.layers.10.bias           128
E         encoder_z$$$features2latent.fc_latent.weight         4 512
E           encoder_z$$$features2latent.fc_latent.bias             4
E                                        Sample Sites:              
E                                            data dist             |
E                                                value         2   |

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/conv.py:456: RuntimeError
_________________ test_jtrvae_decoder_sampler[gaussian-Normal] _________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25b85b10>
args = (tensor([[[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
           1.1197e+00, -1.9448e+00, -1.607...[ 9.1594e-01,  1.8601e+00, -1.4380e+00,  1.5388e+00, -9.8884e-01,
          -9.5761e-01, -9.7409e-01,  1.7627e-02]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c242b7480>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
          1.1197e+00, -1.9448e+00, -1.6079e+...+00,  9.1594e-01,  1.8601e+00, -1.4380e+00,  1.5388e+00,
         -9.8884e-01, -9.5761e-01, -9.7409e-01,  1.7627e-02]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'gaussian', expected_dist = <class 'pyro.distributions.torch.Normal'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_jtrvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 8, 8)
        x = torch.randn(*data_dim)
        model = models.jiVAE(data_dim[1:], 2, 3, coord=1, sampler_d=sampler)
>       _, model_trace = get_enum_traces(model, x)

tests/test_models.py:410: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.6375e+00,  6.3642e-01,  2.1862e-01, -3.2129e-01,  8.8226e-01,
          1.1197e+00, -1.9448e+00, -1.6079e+...+00,  9.1594e-01,  1.8601e+00, -1.4380e+00,  1.5388e+00,
         -9.8884e-01, -9.5761e-01, -9.7409e-01,  1.7627e-02]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_______________ test_jtrvae_decoder_sampler[bernoulli-Bernoulli] _______________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d2afb0>
args = (tensor([[[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,
           1.0019],
         [ 0.9309,  0.74...4,
          -0.6394],
         [ 1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602,
          -0.7407]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c4205dd80>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -... -0.8199, -0.5042, -0.5584, -0.6394,
          1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602, -0.7407]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'bernoulli'
expected_dist = <class 'pyro.distributions.torch.Bernoulli'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_jtrvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 8, 8)
        x = torch.randn(*data_dim)
        model = models.jiVAE(data_dim[1:], 2, 3, coord=1, sampler_d=sampler)
>       _, model_trace = get_enum_traces(model, x)

tests/test_models.py:410: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -... -0.8199, -0.5042, -0.5584, -0.6394,
          1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602, -0.7407]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
____ test_jtrvae_decoder_sampler[continuous_bernoulli-ContinuousBernoulli] _____

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c42035390>
args = (tensor([[[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,
           1.0019],
         [ 0.9309,  0.74...4,
          -0.6394],
         [ 1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602,
          -0.7407]]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c242c9840>
shapes = '                 Trace Shapes:        \n                  Param Sites:        \nencoder_z$$$fc_layers.0.weight 128  6...       encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        '
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when che...      encoder_z$$$fc13.weight   3 128\n         encoder_z$$$fc13.bias       3\n                 Sample Sites:        ')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -... -0.8199, -0.5042, -0.5584, -0.6394,
          1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602, -0.7407]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'continuous_bernoulli'
expected_dist = <class 'pyro.distributions.torch.ContinuousBernoulli'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_jtrvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 8, 8)
        x = torch.randn(*data_dim)
        model = models.jiVAE(data_dim[1:], 2, 3, coord=1, sampler_d=sampler)
>       _, model_trace = get_enum_traces(model, x)

tests/test_models.py:410: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/jivae.py:215: in guide
    z_loc, z_scale, alpha = self.encoder_z(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:104: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -... -0.8199, -0.5042, -0.5584, -0.6394,
          1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602, -0.7407]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E                        Trace Shapes:        
E                         Param Sites:        
E       encoder_z$$$fc_layers.0.weight 128  64
E         encoder_z$$$fc_layers.0.bias     128
E       encoder_z$$$fc_layers.2.weight 128 128
E         encoder_z$$$fc_layers.2.bias     128
E              encoder_z$$$fc11.weight   2 128
E                encoder_z$$$fc11.bias       2
E              encoder_z$$$fc12.weight   2 128
E                encoder_z$$$fc12.bias       2
E              encoder_z$$$fc13.weight   3 128
E                encoder_z$$$fc13.bias       3
E                        Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
________________ test_sstrvae_decoder_sampler[gaussian-Normal] _________________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25d04c10>
args = (tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, ...0.8199, -0.5042, -0.5584, -0.6394,
          1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602, -0.7407]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c25aaa680>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -... -0.8199, -0.5042, -0.5584, -0.6394,
          1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602, -0.7407]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'gaussian', expected_dist = <class 'pyro.distributions.torch.Normal'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_sstrvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 64)
        x = torch.randn(*data_dim)
        model = models.ssiVAE(data_dim[1:], 2, 3, coord=1, sampler_d=sampler)
>       _, model_trace = get_enum_traces(model, x)

tests/test_models.py:422: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[ 0.6392,  1.1305,  1.1334,  0.3719,  1.0884, -1.9836,  0.0248,  1.0019,
          0.9309,  0.7418, -0.4548, -... -0.8199, -0.5042, -0.5584, -0.6394,
          1.3219, -0.5089,  0.7466, -0.4105,  1.7228, -1.0473, -0.6602, -0.7407]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
______________ test_sstrvae_decoder_sampler[bernoulli-Bernoulli] _______________

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25a1a500>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.0458, -0.9056,  1.0527,  0.1233,
         -1.0905,  0.6033,  0.9375,  0.7929, -0.7525, -0.1449, -0.5237, -2.0940]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c5e295c80>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -... -1.0458, -0.9056,  1.0527,  0.1233,
         -1.0905,  0.6033,  0.9375,  0.7929, -0.7525, -0.1449, -0.5237, -2.0940]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'bernoulli'
expected_dist = <class 'pyro.distributions.torch.Bernoulli'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_sstrvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 64)
        x = torch.randn(*data_dim)
        model = models.ssiVAE(data_dim[1:], 2, 3, coord=1, sampler_d=sampler)
>       _, model_trace = get_enum_traces(model, x)

tests/test_models.py:422: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -... -1.0458, -0.9056,  1.0527,  0.1233,
         -1.0905,  0.6033,  0.9375,  0.7929, -0.7525, -0.1449, -0.5237, -2.0940]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
____ test_sstrvae_decoder_sampler[continuous_bernoulli-ContinuousBernoulli] ____

self = <pyro.poutine.trace_messenger.TraceHandler object at 0x7f7c25bc97e0>
args = (tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, ...1.0458, -0.9056,  1.0527,  0.1233,
         -1.0905,  0.6033,  0.9375,  0.7929, -0.7525, -0.1449, -0.5237, -2.0940]]),)
kwargs = {}, exc_type = <class 'RuntimeError'>
exc_value = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)')
traceback = <traceback object at 0x7f7c259f7440>
shapes = 'Trace Shapes:\n Param Sites:\nSample Sites:'
exc = RuntimeError('Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)\nTrace Shapes:\n Param Sites:\nSample Sites:')

    def __call__(self, *args, **kwargs):
        """
        Runs the stochastic function stored in this poutine,
        with additional side effects.
    
        Resets self.trace to an empty trace,
        installs itself on the global execution stack,
        runs self.fn with the given arguments,
        uninstalls itself from the global execution stack,
        stores the arguments and return value of the function in special sites,
        and returns self.fn's return value
        """
        with self.msngr:
            self.msngr.trace.add_node(
                "_INPUT", name="_INPUT", type="args", args=args, kwargs=kwargs
            )
            try:
>               ret = self.fn(*args, **kwargs)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -... -1.0458, -0.9056,  1.0527,  0.1233,
         -1.0905,  0.6033,  0.9375,  0.7929, -0.7525, -0.1449, -0.5237, -2.0940]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError

The above exception was the direct cause of the following exception:

sampler = 'continuous_bernoulli'
expected_dist = <class 'pyro.distributions.torch.ContinuousBernoulli'>

    @pytest.mark.parametrize(
        "sampler, expected_dist",
        [("gaussian", dist.Normal), ("bernoulli", dist.Bernoulli),
         ("continuous_bernoulli", dist.ContinuousBernoulli)])
    def test_sstrvae_decoder_sampler(sampler, expected_dist):
        data_dim = (2, 64)
        x = torch.randn(*data_dim)
        model = models.ssiVAE(data_dim[1:], 2, 3, coord=1, sampler_d=sampler)
>       _, model_trace = get_enum_traces(model, x)

tests/test_models.py:422: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_models.py:34: in get_enum_traces
    guide_trace = poutine.trace(guide_, graph_type="flat").get_trace(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:198: in get_trace
    self(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:180: in __call__
    raise exc from e
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/trace_messenger.py:174: in __call__
    ret = self.fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/pyro/poutine/messenger.py:12: in _context_wrap
    return fn(*args, **kwargs)
pyroved/models/ssivae.py:209: in guide
    alpha = self.encoder_y(xs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:269: in forward
    x = self.fc_layers(x)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=64, out_features=128, bias=True)
input = tensor([[-1.2474, -0.6018, -0.9977, -1.8875,  0.1833, -0.0941, -0.5941, -0.5272,
          0.4070, -0.6982,  0.1894, -... -1.0458, -0.9056,  1.0527,  0.1233,
         -1.0905,  0.6033,  0.9375,  0.7929, -0.7525, -0.1449, -0.5237, -2.0940]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
E       Trace Shapes:
E        Param Sites:
E       Sample Sites:

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_________________________ test_basevae_decode_x[None] __________________________

invariances = None

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's']])
    def test_basevae_decode_x(invariances):
        data_dim = (3, 8, 8)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        z = torch.randn(data_dim[0], 2)
        vae = models.base.baseVAE(data_dim[1:], invariances)
        vae.coord = coord
        vae.grid = utils.generate_grid(data_dim[1:]).to(vae.device)
        dnet = nets.sDecoderNet if 0 < coord < 5 else nets.fcDecoderNet
        decoder_net = dnet(data_dim[1:], 2)
        vae.set_decoder(decoder_net)
>       decoded = vae._decode(z)

tests/test_models.py:465: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/base.py:170: in _decode
    x_decoded.append(generator(z))
pyroved/models/base.py:153: in generator
    loc = self.decoder(*z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:148: in forward
    x = self.fc_layers(z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/container.py:215: in forward
    input = module(input)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=2, out_features=128, bias=True)
input = tensor([[ 0.1192, -0.6317],
        [ 0.1230, -0.1084],
        [ 0.8014,  0.0286]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_____________________ test_basevae_decode_x[invariances1] ______________________

invariances = ['r']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's']])
    def test_basevae_decode_x(invariances):
        data_dim = (3, 8, 8)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        z = torch.randn(data_dim[0], 2)
        vae = models.base.baseVAE(data_dim[1:], invariances)
        vae.coord = coord
        vae.grid = utils.generate_grid(data_dim[1:]).to(vae.device)
        dnet = nets.sDecoderNet if 0 < coord < 5 else nets.fcDecoderNet
        decoder_net = dnet(data_dim[1:], 2)
        vae.set_decoder(decoder_net)
>       decoded = vae._decode(z)

tests/test_models.py:465: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/base.py:170: in _decode
    x_decoded.append(generator(z))
pyroved/models/base.py:153: in generator
    loc = self.decoder(*z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:194: in forward
    x = self.coord_latent(x_coord, z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:230: in forward
    h_z = self.fc_latent(z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=2, out_features=128, bias=False)
input = tensor([[ 0.6085, -0.1231],
        [-0.6417, -2.1935],
        [-0.9770,  2.0147]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument mat2 in method wrapper_CUDA_mm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_____________________ test_basevae_decode_x[invariances2] ______________________

invariances = ['s']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's']])
    def test_basevae_decode_x(invariances):
        data_dim = (3, 8, 8)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        z = torch.randn(data_dim[0], 2)
        vae = models.base.baseVAE(data_dim[1:], invariances)
        vae.coord = coord
        vae.grid = utils.generate_grid(data_dim[1:]).to(vae.device)
        dnet = nets.sDecoderNet if 0 < coord < 5 else nets.fcDecoderNet
        decoder_net = dnet(data_dim[1:], 2)
        vae.set_decoder(decoder_net)
>       decoded = vae._decode(z)

tests/test_models.py:465: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/base.py:170: in _decode
    x_decoded.append(generator(z))
pyroved/models/base.py:153: in generator
    loc = self.decoder(*z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:194: in forward
    x = self.coord_latent(x_coord, z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:230: in forward
    h_z = self.fc_latent(z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=2, out_features=128, bias=False)
input = tensor([[ 0.5131, -0.9107],
        [ 0.4722,  0.4124],
        [-0.8677,  0.1620]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument mat2 in method wrapper_CUDA_mm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
_____________________ test_basevae_decode_x[invariances3] ______________________

invariances = ['r', 't', 's']

    @pytest.mark.parametrize("invariances", [None, ['r'], ['s'], ['r', 't', 's']])
    def test_basevae_decode_x(invariances):
        data_dim = (3, 8, 8)
        coord = 0
        if invariances is not None:
            coord = len(invariances)
            if 't' in invariances and len(data_dim[1:]) == 2:
                coord = coord + 1
        z = torch.randn(data_dim[0], 2)
        vae = models.base.baseVAE(data_dim[1:], invariances)
        vae.coord = coord
        vae.grid = utils.generate_grid(data_dim[1:]).to(vae.device)
        dnet = nets.sDecoderNet if 0 < coord < 5 else nets.fcDecoderNet
        decoder_net = dnet(data_dim[1:], 2)
        vae.set_decoder(decoder_net)
>       decoded = vae._decode(z)

tests/test_models.py:465: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pyroved/models/base.py:170: in _decode
    x_decoded.append(generator(z))
pyroved/models/base.py:153: in generator
    loc = self.decoder(*z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:194: in forward
    x = self.coord_latent(x_coord, z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
pyroved/nets/fc.py:230: in forward
    h_z = self.fc_latent(z)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1518: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/module.py:1527: in _call_impl
    return forward_call(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Linear(in_features=2, out_features=128, bias=False)
input = tensor([[ 0.1946,  2.1157],
        [-0.6351, -1.2873],
        [ 1.2072,  0.6668]])

    def forward(self, input: Tensor) -> Tensor:
>       return F.linear(input, self.weight, self.bias)
E       RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument mat2 in method wrapper_CUDA_mm)

/nfs/home/upratius/.conda/envs/pyrvd_fork/lib/python3.10/site-packages/torch/nn/modules/linear.py:114: RuntimeError
=============================== warnings summary ===============================
tests/test_models.py:629
  /lustre/isaac/scratch/upratius/projects/pyroVED/tests/test_models.py:629: PytestRemovedIn9Warning: Marks applied to fixtures have no effect
  See docs: https://docs.pytest.org/en/stable/deprecations.html#applying-a-mark-to-a-fixture-function
    def test_save_load_basevae(invariances):

tests/test_conv.py: 18 warnings
tests/test_models.py: 15 warnings
tests/test_trainers.py: 2 warnings
  /lustre/isaac/scratch/upratius/projects/pyroVED/pyroved/nets/conv.py:129: UserWarning: 'bilinear' mode is not supported for 1D and 3D; switching to 'nearest' mode
    warn(warn_msg, category=UserWarning)

tests/test_models.py::test_jsstrvae_manifold2d[None-ssiVAE]
  /lustre/isaac/scratch/upratius/projects/pyroVED/pyroved/utils/viz.py:21: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
    plt.figure(figsize=(8, 8))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_models.py::test_base_vae_split_latent_2d - RuntimeError: Ex...
FAILED tests/test_models.py::test_trvae_sites_dims_2d[None] - RuntimeError: E...
FAILED tests/test_models.py::test_trvae_sites_dims_2d[invariances1] - Runtime...
FAILED tests/test_models.py::test_trvae_sites_dims_2d[invariances2] - Runtime...
FAILED tests/test_models.py::test_trvae_sites_dims_2d[invariances3] - Runtime...
FAILED tests/test_models.py::test_trvae_sites_dims_2d[invariances4] - Runtime...
FAILED tests/test_models.py::test_trvae_sites_dims_1d[None] - RuntimeError: E...
FAILED tests/test_models.py::test_trvae_sites_dims_1d[invariances1] - Runtime...
FAILED tests/test_models.py::test_trvae_sites_fn[data_dim0-None] - RuntimeErr...
FAILED tests/test_models.py::test_trvae_sites_fn[data_dim0-invariances1] - Ru...
FAILED tests/test_models.py::test_trvae_sites_fn[data_dim1-None] - RuntimeErr...
FAILED tests/test_models.py::test_trvae_sites_fn[data_dim1-invariances1] - Ru...
FAILED tests/test_models.py::test_ved_sites_dims[input_dim0-output_dim0] - Ru...
FAILED tests/test_models.py::test_ved_sites_dims[input_dim1-output_dim1] - Ru...
FAILED tests/test_models.py::test_ved_sites_dims[input_dim2-output_dim2] - Ru...
FAILED tests/test_models.py::test_ved_sites_dims[input_dim3-output_dim3] - Ru...
FAILED tests/test_models.py::test_ved_sites_fn[input_dim0-output_dim0] - Runt...
FAILED tests/test_models.py::test_ved_sites_fn[input_dim1-output_dim1] - Runt...
FAILED tests/test_models.py::test_ved_sites_fn[input_dim2-output_dim2] - Runt...
FAILED tests/test_models.py::test_ved_sites_fn[input_dim3-output_dim3] - Runt...
FAILED tests/test_models.py::test_jtrvae_cont_sites_dims_2d[None] - RuntimeEr...
FAILED tests/test_models.py::test_jtrvae_cont_sites_dims_2d[invariances1] - R...
FAILED tests/test_models.py::test_jtrvae_cont_sites_dims_2d[invariances2] - R...
FAILED tests/test_models.py::test_jtrvae_cont_sites_dims_2d[invariances3] - R...
FAILED tests/test_models.py::test_jtrvae_cont_sites_dims_2d[invariances4] - R...
FAILED tests/test_models.py::test_jtrvae_disc_sites_dims[None] - RuntimeError...
FAILED tests/test_models.py::test_jtrvae_disc_sites_dims[invariances1] - Runt...
FAILED tests/test_models.py::test_jtrvae_disc_sites_dims[invariances2] - Runt...
FAILED tests/test_models.py::test_jtrvae_disc_sites_dims[invariances3] - Runt...
FAILED tests/test_models.py::test_jtrvae_disc_sites_dims[invariances4] - Runt...
FAILED tests/test_models.py::test_jtrvae_cont_sites_fn[None] - RuntimeError: ...
FAILED tests/test_models.py::test_jtrvae_cont_sites_fn[invariances1] - Runtim...
FAILED tests/test_models.py::test_jtrvae_cont_sites_fn[invariances2] - Runtim...
FAILED tests/test_models.py::test_jtrvae_cont_sites_fn[invariances3] - Runtim...
FAILED tests/test_models.py::test_jtrvae_cont_sites_fn[invariances4] - Runtim...
FAILED tests/test_models.py::test_jtrvae_disc_sites_fn[None] - RuntimeError: ...
FAILED tests/test_models.py::test_jtrvae_disc_sites_fn[invariances1] - Runtim...
FAILED tests/test_models.py::test_jtrvae_disc_sites_fn[invariances2] - Runtim...
FAILED tests/test_models.py::test_jtrvae_disc_sites_fn[invariances3] - Runtim...
FAILED tests/test_models.py::test_jtrvae_disc_sites_fn[invariances4] - Runtim...
FAILED tests/test_models.py::test_sstrvae_cont_sites_dims[None] - RuntimeErro...
FAILED tests/test_models.py::test_sstrvae_cont_sites_dims[invariances1] - Run...
FAILED tests/test_models.py::test_sstrvae_cont_sites_dims[invariances2] - Run...
FAILED tests/test_models.py::test_sstrvae_cont_sites_dims[invariances3] - Run...
FAILED tests/test_models.py::test_sstrvae_cont_sites_dims[invariances4] - Run...
FAILED tests/test_models.py::test_sstrvae_disc_sites_dims[None] - RuntimeErro...
FAILED tests/test_models.py::test_sstrvae_disc_sites_dims[invariances1] - Run...
FAILED tests/test_models.py::test_sstrvae_disc_sites_dims[invariances2] - Run...
FAILED tests/test_models.py::test_sstrvae_disc_sites_dims[invariances3] - Run...
FAILED tests/test_models.py::test_sstrvae_disc_sites_dims[invariances4] - Run...
FAILED tests/test_models.py::test_sstrvae_cont_sites_fn[None] - RuntimeError:...
FAILED tests/test_models.py::test_sstrvae_cont_sites_fn[invariances1] - Runti...
FAILED tests/test_models.py::test_sstrvae_cont_sites_fn[invariances2] - Runti...
FAILED tests/test_models.py::test_sstrvae_cont_sites_fn[invariances3] - Runti...
FAILED tests/test_models.py::test_sstrvae_cont_sites_fn[invariances4] - Runti...
FAILED tests/test_models.py::test_sstrvae_disc_sites_fn[None] - RuntimeError:...
FAILED tests/test_models.py::test_sstrvae_disc_sites_fn[invariances1] - Runti...
FAILED tests/test_models.py::test_sstrvae_disc_sites_fn[invariances2] - Runti...
FAILED tests/test_models.py::test_sstrvae_disc_sites_fn[invariances3] - Runti...
FAILED tests/test_models.py::test_sstrvae_disc_sites_fn[invariances4] - Runti...
FAILED tests/test_models.py::test_ssregvae_cont_sites_dims[None] - RuntimeErr...
FAILED tests/test_models.py::test_ssregvae_cont_sites_dims[invariances1] - Ru...
FAILED tests/test_models.py::test_ssregvae_cont_sites_dims[invariances2] - Ru...
FAILED tests/test_models.py::test_ssregvae_cont_sites_dims[invariances3] - Ru...
FAILED tests/test_models.py::test_ssregvae_cont_sites_dims[invariances4] - Ru...
FAILED tests/test_models.py::test_ssregvae_disc_sites_dims[None] - RuntimeErr...
FAILED tests/test_models.py::test_ssregvae_disc_sites_dims[invariances1] - Ru...
FAILED tests/test_models.py::test_ssregvae_disc_sites_dims[invariances2] - Ru...
FAILED tests/test_models.py::test_ssregvae_disc_sites_dims[invariances3] - Ru...
FAILED tests/test_models.py::test_ssregvae_disc_sites_dims[invariances4] - Ru...
FAILED tests/test_models.py::test_ssregvae_vae_sites_fn[None] - RuntimeError:...
FAILED tests/test_models.py::test_ssregvae_vae_sites_fn[invariances1] - Runti...
FAILED tests/test_models.py::test_ssregvae_vae_sites_fn[invariances2] - Runti...
FAILED tests/test_models.py::test_ssregvae_vae_sites_fn[invariances3] - Runti...
FAILED tests/test_models.py::test_ssregvae_vae_sites_fn[invariances4] - Runti...
FAILED tests/test_models.py::test_ssregvae_reg_sites_fn[None] - RuntimeError:...
FAILED tests/test_models.py::test_ssregvae_reg_sites_fn[invariances1] - Runti...
FAILED tests/test_models.py::test_ssregvae_reg_sites_fn[invariances2] - Runti...
FAILED tests/test_models.py::test_ssregvae_reg_sites_fn[invariances3] - Runti...
FAILED tests/test_models.py::test_ssregvae_reg_sites_fn[invariances4] - Runti...
FAILED tests/test_models.py::test_trvae_decoder_sampler[gaussian-Normal] - Ru...
FAILED tests/test_models.py::test_trvae_decoder_sampler[bernoulli-Bernoulli]
FAILED tests/test_models.py::test_trvae_decoder_sampler[continuous_bernoulli-ContinuousBernoulli]
FAILED tests/test_models.py::test_ved_decoder_sampler[gaussian-Normal] - Runt...
FAILED tests/test_models.py::test_ved_decoder_sampler[bernoulli-Bernoulli] - ...
FAILED tests/test_models.py::test_ved_decoder_sampler[continuous_bernoulli-ContinuousBernoulli]
FAILED tests/test_models.py::test_jtrvae_decoder_sampler[gaussian-Normal] - R...
FAILED tests/test_models.py::test_jtrvae_decoder_sampler[bernoulli-Bernoulli]
FAILED tests/test_models.py::test_jtrvae_decoder_sampler[continuous_bernoulli-ContinuousBernoulli]
FAILED tests/test_models.py::test_sstrvae_decoder_sampler[gaussian-Normal] - ...
FAILED tests/test_models.py::test_sstrvae_decoder_sampler[bernoulli-Bernoulli]
FAILED tests/test_models.py::test_sstrvae_decoder_sampler[continuous_bernoulli-ContinuousBernoulli]
FAILED tests/test_models.py::test_basevae_decode_x[None] - RuntimeError: Expe...
FAILED tests/test_models.py::test_basevae_decode_x[invariances1] - RuntimeErr...
FAILED tests/test_models.py::test_basevae_decode_x[invariances2] - RuntimeErr...
FAILED tests/test_models.py::test_basevae_decode_x[invariances3] - RuntimeErr...
================= 96 failed, 203 passed, 37 warnings in 30.37s =================
